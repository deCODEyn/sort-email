name: CI & Deploy (Render backend + Netlify frontend - Docker-first)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BACKEND_DIR: backend
  FRONTEND_DIR: frontend
  RENDER_BRANCH: main

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Criar .env.development na raiz
        run: |
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env.development
          echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" >> .env.development
          echo "GEMINI_MODEL_NAME=${{ secrets.GEMINI_MODEL_NAME }}" >> .env.development
          echo "GROQ_MODEL_NAME=${{ secrets.GROQ_MODEL_NAME }}" >> .env.development
      - run: npm run test:backend

  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm run test:frontend

  deploy-backend:
    name: Deploy backend → Render via Hook
    runs-on: ubuntu-latest
    needs: test-backend
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Trigger Render deploy via hook
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
        run: |
          echo "Triggering deploy on Render via hook..."
          curl -X POST "$RENDER_DEPLOY_HOOK"
          echo "Deploy triggered."

  deploy-frontend:
    name: Deploy frontend → Netlify
    runs-on: ubuntu-latest
    needs: test-frontend
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Build frontend Docker image
        env:
          RENDER_SERVICE_URL: ${{ secrets.RENDER_SERVICE_URL }}
        run: |
          echo "Building frontend with VITE_API_URL=${RENDER_SERVICE_URL}/api"
          docker build \
            --build-arg VITE_API_URL="${RENDER_SERVICE_URL}/api" \
            -t frontend-prod "${{ env.FRONTEND_DIR }}"
      - name: Extract built static files (dist) from container
        run: |
          cid=$(docker create frontend-prod)
          mkdir -p ./dist
          docker cp $cid:/usr/share/nginx/html/. ./dist
          docker rm $cid
          ls -R ./dist
      - name: Add SPA redirect rules for Netlify
        run: |
          echo "/* /index.html 200" > ./dist/_redirects
      - name: Install Netlify CLI
        run: npm install -g netlify-cli
      - name: Deploy to Netlify (production)
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          netlify deploy \
            --site="${NETLIFY_SITE_ID}" \
            --auth="${NETLIFY_AUTH_TOKEN}" \
            --prod \
            --dir=./dist